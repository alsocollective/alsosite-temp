var Atype2,Ltype2,Stype2,Otype2;

var grow;
var growTo = {"x":0,"y":0};

var Logo = [[3,341],[3,347],[3,353],[5,333],[5,359],[7,365],[8,326],[10,371],[12,320],[15,377],[18,315],[21,344],[21,350],[21,381],[23,336],[23,356],[24,310],[25,362],[27,330],[27,384],[30,308],[31,367],[33,325],[33,386],[36,306],[37,370],[39,323],[39,388],[42,305],[43,371],[45,322],[45,388],[48,306],[49,371],[51,323],[51,388],[54,306],[55,369],[57,326],[57,386],[60,308],[61,365],[63,328],[63,384],[65,359],[66,311],[67,351],[69,323],[69,381],[72,315],[73,346],[75,375],[79,346],[80,71],[80,77],[80,83],[80,368],[81,89],[82,63],[83,95],[83,362],[84,514],[84,520],[84,526],[85,57],[85,346],[85,352],[86,101],[89,51],[90,513],[90,530],[91,107],[94,342],[94,348],[95,45],[95,354],[96,333],[96,360],[96,513],[96,530],[97,111],[98,73],[98,79],[98,366],[99,85],[99,327],[100,67],[100,482],[100,488],[100,494],[100,500],[100,506],[100,536],[100,542],[100,548],[100,554],[100,560],[100,566],[100,572],[100,578],[100,584],[100,590],[101,41],[102,91],[102,372],[103,115],[103,321],[105,61],[106,480],[106,593],[107,38],[107,97],[107,378],[109,117],[109,315],[111,56],[112,345],[112,479],[112,593],[113,37],[113,100],[113,351],[113,382],[114,337],[114,357],[115,118],[115,311],[117,54],[118,331],[118,363],[118,479],[118,485],[118,491],[118,497],[118,503],[118,509],[118,531],[118,537],[118,543],[118,549],[118,555],[118,561],[118,567],[118,573],[118,579],[118,585],[118,591],[119,36],[119,101],[119,385],[121,119],[121,308],[123,54],[124,326],[124,368],[124,513],[124,530],[125,36],[125,101],[125,387],[127,118],[127,306],[129,55],[130,323],[130,370],[130,513],[130,530],[131,38],[131,99],[131,388],[133,117],[133,305],[135,58],[136,323],[136,371],[136,513],[136,530],[137,40],[137,96],[137,388],[139,114],[139,306],[140,64],[141,90],[142,323],[142,370],[142,513],[142,519],[142,528],[143,44],[143,70],[143,387],[144,38],[144,76],[144,82],[145,118],[145,306],[148,326],[148,368],[149,386],[150,37],[151,118],[151,308],[154,331],[154,362],[154,489],[154,495],[155,384],[156,37],[157,118],[157,311],[157,337],[157,356],[157,501],[157,514],[157,520],[157,526],[157,532],[157,538],[157,544],[157,550],[157,556],[157,562],[157,568],[157,574],[157,580],[157,586],[157,592],[158,343],[158,350],[158,483],[161,380],[162,37],[162,43],[162,49],[162,55],[162,61],[162,67],[162,73],[162,79],[162,85],[162,91],[162,97],[162,103],[162,109],[163,315],[163,503],[163,513],[163,593],[164,480],[167,375],[168,321],[169,504],[169,513],[169,593],[170,480],[171,369],[172,327],[174,362],[175,333],[175,500],[175,513],[175,519],[175,525],[175,531],[175,537],[175,543],[175,549],[175,555],[175,561],[175,567],[175,573],[175,579],[175,585],[175,591],[176,339],[176,355],[176,484],[177,345],[178,490],[182,184],[182,190],[182,196],[183,6],[183,12],[183,18],[183,24],[183,30],[183,36],[183,42],[183,48],[183,54],[183,60],[183,66],[183,72],[183,78],[183,84],[183,90],[183,96],[183,102],[183,108],[183,114],[188,183],[188,200],[188,434],[188,440],[188,446],[188,514],[189,5],[189,118],[190,520],[191,275],[191,281],[191,287],[191,293],[191,299],[191,305],[191,311],[191,317],[191,323],[191,329],[191,335],[191,341],[191,347],[191,353],[191,359],[191,365],[191,371],[191,377],[191,383],[193,526],[194,183],[194,200],[194,433],[194,449],[194,513],[195,4],[195,118],[195,532],[197,274],[197,387],[197,538],[199,544],[200,183],[200,200],[200,433],[200,449],[200,513],[201,3],[201,9],[201,15],[201,21],[201,27],[201,33],[201,39],[201,45],[201,51],[201,57],[201,63],[201,69],[201,75],[201,81],[201,87],[201,93],[201,99],[201,105],[201,111],[201,117],[202,550],[203,273],[203,387],[204,556],[206,183],[206,200],[206,433],[206,449],[206,513],[206,562],[208,568],[209,272],[209,278],[209,284],[209,290],[209,296],[209,302],[209,308],[209,314],[209,320],[209,326],[209,332],[209,338],[209,344],[209,350],[209,356],[209,362],[209,368],[209,374],[209,380],[209,386],[209,519],[210,156],[210,162],[210,168],[210,174],[210,206],[210,212],[210,218],[210,224],[211,574],[212,433],[212,449],[212,525],[213,580],[214,531],[215,586],[216,155],[216,228],[216,537],[217,592],[218,92],[218,98],[218,433],[218,449],[218,543],[220,104],[220,549],[222,155],[222,228],[222,555],[223,55],[223,61],[223,593],[224,67],[224,91],[224,110],[224,433],[224,449],[224,561],[225,49],[226,567],[228,73],[228,155],[228,161],[228,167],[228,173],[228,179],[228,201],[228,207],[228,213],[228,219],[228,225],[229,593],[230,43],[230,91],[230,114],[230,275],[230,281],[230,287],[230,293],[230,299],[230,305],[230,311],[230,317],[230,323],[230,329],[230,335],[230,341],[230,347],[230,353],[230,359],[230,365],[230,371],[230,377],[230,383],[230,433],[230,449],[230,557],[233,549],[234,77],[234,183],[234,200],[235,543],[235,593],[236,38],[236,95],[236,117],[236,274],[236,387],[236,433],[236,449],[238,535],[238,586],[240,59],[240,80],[240,183],[240,200],[240,529],[241,101],[241,578],[242,36],[242,118],[242,273],[242,387],[242,433],[242,449],[242,523],[243,572],[244,53],[244,439],[245,65],[245,515],[246,82],[246,183],[246,200],[246,564],[247,102],[248,36],[248,119],[248,272],[248,278],[248,284],[248,290],[248,296],[248,302],[248,308],[248,314],[248,320],[248,326],[248,332],[248,338],[248,344],[248,350],[248,356],[248,362],[248,368],[248,374],[248,380],[248,386],[249,556],[250,53],[251,66],[251,513],[252,84],[252,183],[252,200],[252,548],[253,99],[254,37],[254,118],[255,90],[255,540],[256,56],[256,189],[257,68],[257,513],[258,532],[260,41],[260,116],[261,524],[262,50],[262,339],[262,345],[262,351],[263,70],[263,357],[263,513],[264,332],[265,363],[266,111],[267,326],[268,76],[268,369],[269,545],[269,551],[269,557],[270,563],[271,104],[271,538],[272,82],[272,320],[272,375],[272,569],[273,88],[273,96],[274,532],[275,575],[278,314],[278,379],[279,526],[279,581],[281,354],[282,76],[282,335],[283,69],[283,82],[283,360],[284,88],[284,310],[284,383],[285,62],[285,94],[285,520],[285,586],[287,329],[287,353],[288,56],[288,100],[288,337],[288,366],[288,560],[289,542],[290,308],[290,386],[290,566],[291,516],[291,590],[293,50],[293,106],[293,324],[293,353],[293,536],[294,337],[294,369],[294,559],[295,543],[295,572],[296,306],[296,387],[297,514],[297,592],[299,44],[299,111],[299,322],[299,353],[299,531],[300,337],[300,371],[300,559],[301,72],[301,78],[301,84],[301,543],[301,575],[302,305],[302,388],[303,512],[303,593],[304,65],[304,90],[305,40],[305,114],[305,322],[305,353],[305,529],[306,337],[306,371],[306,559],[307,543],[307,577],[308,96],[308,306],[308,388],[309,59],[309,512],[309,594],[311,38],[311,117],[311,323],[311,353],[311,528],[312,337],[312,370],[312,559],[313,543],[313,577],[314,99],[314,307],[314,387],[315,55],[315,512],[315,594],[317,37],[317,118],[317,327],[317,353],[317,529],[318,337],[318,367],[318,559],[319,543],[319,576],[320,101],[320,309],[320,385],[321,54],[321,513],[321,593],[323,36],[323,119],[323,353],[323,532],[324,336],[324,363],[324,559],[325,543],[325,573],[326,101],[326,312],[326,383],[327,54],[327,515],[327,591],[329,36],[329,119],[329,353],[330,363],[330,559],[331,542],[331,569],[332,100],[332,317],[332,379],[333,55],[333,518],[333,589],[335,37],[335,117],[335,353],[336,323],[336,363],[336,559],[337,569],[338,97],[338,372],[339,58],[339,523],[339,585],[340,329],[341,39],[341,116],[341,353],[342,335],[342,363],[342,559],[343,64],[343,341],[343,529],[343,569],[344,90],[344,347],[345,579],[346,70],[346,84],[347,42],[347,76],[347,113],[347,535],[348,559],[349,541],[349,569],[350,547],[351,553],[353,47],[353,108],[353,344],[353,350],[354,338],[354,356],[356,331],[356,362],[357,53],[358,102],[359,325],[359,368],[361,59],[361,96],[363,65],[363,374],[364,86],[364,319],[365,71],[365,77],[369,379],[370,313],[372,340],[372,346],[372,352],[374,358],[375,334],[375,383],[376,310],[377,364],[380,328],[381,386],[382,307],[383,368],[386,324],[387,387],[388,306],[389,370],[392,322],[393,388],[394,305],[395,371],[398,323],[399,388],[400,306],[401,370],[404,324],[405,387],[406,307],[407,368],[410,328],[411,385],[412,309],[413,363],[416,326],[416,357],[417,382],[418,312],[418,348],[422,321],[423,378],[424,346],[428,372],[430,346],[432,365],[435,356],[436,346]]

paper.install(window);

window.onload = function(){
	setTimeout(function(){
		var height = window.innerHeight;
		var width = window.innerWidth;

		var canvasElement = document.getElementById("myCanvas");
		canvasElement.height = height;
		canvasElement.width = width;

		paper.setup("myCanvas");

		//var points = createLines(Logo,(width/2)-612,(height/2)-420);
		var points = createLines(Logo,(width/2)-221,(height/2)-300);

	    view.draw();

	    var ranSize = 0;

		zeroAndRandom(points,ranSize);


		//grow = false;
		setTimeout(function(){
			grow = true;
		},100);
		
		view.onFrame = function(event) {
				
				linesFromLocationTo(points,ranSize,growTo);

				if(ranSize > 0){
				ranSize -= 1;
				} else {
					ranSize = 0;
				}
				
				if(grow == true){
					ranSize += 1.001;
					
					/*if(ranSize > 30){
						grow = false;
					}*/
				}
		}
		
		var tool = new Tool();
	    tool.onMouseMove = function(event){
		    grow = true;
			ranSize += 0.5;
		}
	},100);
}

setTimeout(function(){
	var canvasElement = document.getElementById("myCanvas");
	if(canvasElement.height==0){
		var height = window.innerHeight;
		var width = window.innerWidth;
		canvasElement.height = height;
		canvasElement.width = width;
		view.draw();
	}

},500)

function zeroAndRandom(path, size){
	for(var a = 0; a < path.length; ++a){
		path[a].lastSegment.point.x = path[a].firstSegment.point.x+(Math.random()*size)-(size/2);
		path[a].lastSegment.point.y = path[a].firstSegment.point.y+(Math.random()*size)-(size/2);
	}
}

function linesFromLocation(path, size){
	for(var a = 0; a < path.length; ++a){
		path[a].lastSegment.point.x += (Math.random()*size)-(size/2);
		path[a].lastSegment.point.y += (Math.random()*size)-(size/2);
	}
}

function linesFromLocationTo(path, size, to){
	for(var a = 0; a < path.length; ++a){
		path[a].lastSegment.point.x += (Math.random()*size)-(size/2);
		path[a].lastSegment.point.y += (Math.random()*size)-(size/2);
	}
}


function createLines(points,x,y){
	var paths = [];
	var path;
	var prevPoint = points[0];
	var nextPoint = null;

	while(points.length > 1){
		nextPoint = findClosest(points,prevPoint);
		prevPoint = points[nextPoint];

		path = new Path();
		path.add([prevPoint[0]+x,prevPoint[1]+y]);
		path.add([view.viewSize.width/2,view.viewSize.height/2]);//[prevPoint.x+x+200,prevPoint.y+y]);
		path.strokeColor = '#000';
		//path.strokeColor = '#'+(Math.random()*0xFFFFFF<<0).toString(16);
		path.strokeWidth = Math.floor((Math.random()*3)+1);
		
		// path.strokeCap = 'round';


		points.splice(nextPoint,1);
		paths.push(path);
	}
	return paths;
}

function findClosest(points, currentPoint){
	var smallest = 99999999;
	var smallestValue = 99999999;
	var temp = 0;
	for(var a = 0; a < points.length; ++a){
		temp = subtract(points[a],currentPoint);
		if(temp < smallestValue){
			smallestValue = temp;
			smallest = a;
		}
	}

	return smallest;
}

//subtract 1 from 2
function subtract(point1, point2){
	var x = point2[0]-point1[0];
	var y = point2[1]-point1[1];
	if(x < 0){
		x = x*-1;
	}

	if(y < 0){
		y = y*-1;
	}

	return x+y;
} 
